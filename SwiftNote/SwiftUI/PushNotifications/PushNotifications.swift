//
//  PushNotifications.swift
//  SwiftNote
//
//  Created by Nguyen Tuan Anh on 20/12/2022.
//

import SwiftUI
import UserNotifications

extension AppDelegate {
    // MARK: - Register Notifications
    // Request quy·ªÅn v√† ƒëƒÉng k√Ω v·ªõi APNs
    func registerForPushNotifications(_ application: UIApplication) {
        let center = UNUserNotificationCenter.current()
        center.requestAuthorization(options: [.alert, .badge, .sound, .provisional]) { [weak self] granted, error in
            guard granted else { return }
            center.delegate = self?.notificationDelegate
            Task { @MainActor in
                application.registerForRemoteNotifications()
            }
        }
    }
    
    // ƒêƒÉng k√Ω th√†nh c√¥ng v√† tr·∫£ v·ªÅ Device Token
    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {
        let token: String = deviceToken.reduce("") { $0 + String(format: "%02x", $1) }
        print("Device Token: \(token)")
        registerCustomActions()
    }
    
    // ƒêƒÉng k√Ω l·ªói v√† tr·∫£ v·ªÅ l·ªói
    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {
        print(error.localizedDescription)
    }
    
    // MARK: - Silent Push Notification
    // App b·∫≠t Background Modes v√† trong payload c√≥ "content-available": 1
    // iOS s·∫Ω ƒë√°nh th·ª©c App v√† cho n√≥ t·ªëi ƒëa 30s ƒë·ªÉ th·ª±c hi·ªán c√°c c√¥ng vi·ªác c·∫ßn thi·∫øt ==> Ch·ªâ s·ª≠ d·ª•ng cho c√°c c√¥ng vi·ªác nh·ªè
    func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any]) async -> UIBackgroundFetchResult {
        guard let customValue1 = userInfo["customKey1"] as? String else { return .noData }
        do {
            try updateDatabase(value: customValue1)
            return .newData
        } catch {
            return .failed
        }
    }
    
    private func updateDatabase(value: String) throws {
        enum ErrorType: Error {
            case dataEmpty
        }
        guard !value.isEmpty else { throw ErrorType.dataEmpty }
        print("\(value)")
    }
    
    // MARK: - Custom Actions
    // Code v√≠ d·ª• d∆∞·ªõi ƒëƒÉng k√Ω 1 category v·ªõi 2 action (m·ªói category c√≥ th·ªÉ ƒëƒÉng k√Ω t·ªëi ƒëa 4 action, tuy nhi√™n khi hi·ªÉn th·ªã ·ªü d·∫°ng banner n√≥ ch·ªâ hi·ªÉn th·ªã 2 custom action ƒë·∫ßu ti√™n)
    // ƒê∆∞a h√†m ƒëƒÉng k√Ω n√†y v√†o didRegisterForRemoteNotificationsWithDeviceToken (v√¨ ch·ªâ khi ƒëƒÉng k√Ω th√†nh c√¥ng th√¨ vi·ªác ƒëƒÉng k√Ω m·ªõi c√≥ √Ω nghƒ©a)
    private func registerCustomActions() {
        let accept = UNNotificationAction(identifier: ActionIdentifier.accept.rawValue, title: "Accept")
        let reject = UNNotificationAction(identifier: ActionIdentifier.reject.rawValue, title: "Reject")
        let category = UNNotificationCategory(identifier: ActionIdentifier.categoryId, actions: [accept, reject], intentIdentifiers: [])
        UNUserNotificationCenter.current().setNotificationCategories([category])
    }
}

enum ActionIdentifier: String {
    static let categoryId: String = "file_added"
    case accept
    case reject
}

// MARK: - Notification Center Delegate
final class NotificationDelegate: NSObject, UNUserNotificationCenterDelegate, ObservableObject {
    
    // M·∫∑c ƒë·ªãnh iOS s·∫Ω ·∫©n t·∫•t c·∫£ c√°c notification ƒë·∫øn khi App ƒëang ·ªü tr·∫°ng th√°i foreground
    // ƒë·ªÉ hi·ªÉn th·ªã ch·ªâ c·∫ßn implement method n√†y, n√≥ s·∫Ω ƒë∆∞·ª£c g·ªçi khi notification ƒë·∫øn khi App ƒëang ·ªü tr·∫°ng th√°i foreground
    func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification) async -> UNNotificationPresentationOptions {
        let userInfo = notification.request.content.userInfo
        print("User Info: \(userInfo)")
        return [.banner, .badge, .sound]
    }
    
    // M·ªôt notification t·ªët th√¨ kh√¥ng n√™n k√®m theo b·∫•t k·ª≥ h√†nh ƒë·ªông n√†o,
    // v√¨ ph·∫ßn l·ªõn ng∆∞·ªùi d√πng s·∫Ω kh√¥ng tap v√†o n√≥ v√† h·ªç n√™n nh·∫≠n ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt hi·ªÉn th·ªã ngay tr√™n notification.
    // Tuy nhi√™n ƒë√¥i khi c·∫ßn th·ª±c thi m·ªôt h√†nh ƒë·ªông n√†o ƒë√≥ khi tap v√†o notification th√¨ method n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi.
    @MainActor // Fix crash: S·ª≠ d·ª•ng h√†m async b·ªã d√≠nh l·ªói crash, b√°o c·∫ßn th·ª±c hi·ªán t√°c v·ª• tr√™n main thread.
    func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse) async {
        // guard response.actionIdentifier == UNNotificationDefaultActionIdentifier else { return } (Comment ƒë·ªÉ kh√¥ng ch·∫°y v√†o return khi ·∫•n v√†o Custom Action button)
        // c√≥ m·ªôt actionIdentifier l√† UNNotificationDismissActionIdentifier, tuy nhi√™n kh√¥ng nh∆∞ c√°i t√™n, h√†m n√†y s·∫Ω kh√¥ng ƒë∆∞·ª£c g·ªçi khi user dismiss Noti
        let userInfo = response.notification.request.content.userInfo
        handleNotification(with: userInfo)
        let identity = response.notification.request.content.categoryIdentifier
        guard identity == ActionIdentifier.categoryId,
              let action = ActionIdentifier(rawValue: response.actionIdentifier) else { return }
        switch action {
        case .accept:
            print("You pressed accept")
        case .reject:
            print("You pressed reject")
        }
    }
    
    private func handleNotification(with userInfo: [AnyHashable: Any]) {
        guard let customValue1 = userInfo["customKey1"] as? String else { return }
        print("\(customValue1)")
    }
}

// MARK: - Payload Modification
/*
 M·ª•c ƒë√≠ch: Ch·ªânh s·ª≠a payload tr∆∞·ªõc khi hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng
 Khi g·ª≠i payload k√®m theo c·∫∑p key-value "mutable-content": 1 ƒë·ªÉ b√°o cho iOS bi·∫øt n√≥ c·∫ßn ch·∫°y NotificationService ƒë·ªÉ ch·ªânh s·ª≠a payload tr∆∞·ªõc khi hi·ªÉn th·ªã.
 Vai tr√≤ nh∆∞ m·ªôt c·∫ßu n·ªëi ·ªü gi·ªØa APNs v√† UI
 C√°c m·ª•c ƒë√≠ch th∆∞·ªùng g·∫∑p nh∆∞: t·∫£i ·∫£nh v·ªõi url ƒë∆∞·ª£c ch·ª©a trong payload, gi·∫£i m√£ c√°c n·ªôi dung ƒë√£ ƒë∆∞·ª£c m√£ ho√° trong payload v√¨ m·ª•c ƒë√≠ch b·∫£o m·∫≠t
 Setup: File > New > Target > Notification Service Extension. ƒê·∫∑t t√™n l√† Payload Modification v√† KH√îNG active scheme (do kh√¥ng c√≥ nhu c·∫ßu build v√† debug)
 Xcode s·∫Ω t·∫°o 1 Folder m·ªõi c√≥ t√™n gi·ªëng v·ªõi t√™n ƒë·∫∑t ph√≠a tr√™n v√† c√°c file c·∫ßn thi·∫øt: NotificationService.swift v√† Info.plist
 C√°c c√¥ng vi·ªác c·∫ßn thi·∫øt s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán v√† m√¥ t·∫£ trong file NotificationService.swift
 */
/*
 C√†i ƒë·∫∑t App Group ƒë·ªÉ share data gi·ªØa c√°c Target (v√≠ d·ª• m·ª•c ƒë√≠ch hi·ªán t·∫°i l√† main Target v√† Payload Modification Target)
 ·ªû main target th√™m Capability App Group. Th√™m m·ªôt group m·ªõi, ƒë·∫∑t t√™n cho n√≥, th∆∞·ªùng s·∫Ω l√† group + bundleId
 ·ªû Payload Modification c≈©ng th√™m Capability App Group. T√≠ch ch·ªçn v√†o group ƒë√£ t·∫°o ph√≠a tr√™n.
 */

// MARK: - UINotification Modification

// MARK: - Setup Xcode Project
/*
 B∆∞·ªõc 1: Project -> Select Targer -> Tab Signing & Capabilities -> + Capability -> Push Notifications (C·∫ßn t√†i kho·∫£n tr·∫£ ph√≠)
 B∆∞·ªõc 2: Request quy·ªÅn (v√≠ d·ª• n√†y ƒë·∫∑t trong didFinishLaunchingWithOptions)
 B∆∞·ªõc 3: T·∫£i file Authentication Token .p8 (JWT - JSON Web Tokens)
 B∆∞·ªõc 4: T·∫°o file payload.apns ƒë·ªÉ test tr√™n simulator cho thu·∫≠n ti·ªán (t·ªáp ƒë√≠nh k√®m)
         (Remote notifitication v√† NotificationService (ch·ªânh s·ª≠a payload) s·∫Ω kh√¥ng ho·∫°t ƒë·ªông tr√™n simulator)
 */

// MARK: - Payload
/*
 Payload c√≥ c·∫•u tr√∫c d·∫°ng JSON, dung l∆∞·ª£ng t·ªëi ƒëa 4KB (4096 bytes) n·∫øu l·ªõn h∆°n s·∫Ω b·ªã APNs t·ª´ ch·ªëi.
 C·∫•u tr√∫c c·ªßa file JSON:
 G·ªìm key: aps l√† key ch√≠nh v√† c√°c sub-key trong object n√†y ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a b·ªüi Apple
 {
   "aps": {
     "alert": {
       "title": "Ti√™u ƒë·ªÅ c·ªßa push notification.", ==> Localizable.strings: title-loc-key, title-loc-args (m·ª•c ƒë√≠ch localized ph√≠a App, tuy nhi√™n x·ª≠ l√Ω ph√≠a b√™n Server th√¨ t·ªët h∆°n)
       "body": "N·ªôi dung c·ªßa push notification" ==> Localizable.strings: loc-key, loc-args (m·ª•c ƒë√≠ch localized ph√≠a App, tuy nhi√™n x·ª≠ l√Ω ph√≠a b√™n Server th√¨ t·ªët h∆°n)
     },
     "badge": 2, ==> S·ªë hi·ªán tr√™n icon c·ªßa App, ƒë·ªÉ remove th√¨ set l·∫°i gi√° tr·ªã v·ªÅ 0
     "sound": "filename.caf", ==> √Çm thanh ph√°t ra khi nh·∫≠n push notification, ƒë∆∞·ª£c l·∫•y ·ªü main App'sBundle. Y√™u c·∫ßu d∆∞·ªõi 30s v√† l√† m·ªôt trong 4 ƒë·ªãnh d·∫°ng sau: Linear PCM, MA4, ùùÅLaw, aLaw.
                                  N·∫øu kh√¥ng tho·∫£ m√£n th√¨ iOS s·∫Ω s·ª≠ d·ª•ng √¢m thanh default thay th·∫ø.
                                  S·ª≠ d·ª•ng dictionary n·∫øu App c·∫ßn g·ª≠i m·ªôt push notification d·∫°ng kh·∫©n c·∫•p, s·∫Ω ph√°t √¢m thanh ngay c·∫£ khi b·∫≠t ch·∫ø ƒë·ªô kh√¥ng l√†m phi·ªÅn (c·∫ßn khai trong entitlement v·ªõi Apple)
                                  "sound": {
                                    "critical": 1, ==> set b·∫±ng 1 ƒë·ªÉ th√¥ng b√°o r·∫±ng ƒë√¢y l√† m·ªôt push notification kh·∫©n c·∫•p
                                    "name": "filename.caf", ==> gi·ªëng nh∆∞ m√¥ t·∫£ TH m·∫∑c ƒë·ªãnh ph√≠a b√™n tr√™n
                                    "volume": 0.75 ==> √¢m l∆∞·ª£ng ch·∫°y t·ª´ 0.0 (silent) ƒë·∫øn 1 (max volume)
                                  }
     "thread-id": "C√°c push notification c√≥ c√πng thread-id s·∫Ω ƒë∆∞·ª£c group l·∫°i v·ªõi nhau", ==> N·∫øu kh√¥ng c√≥ tr∆∞·ªùng n√†y th√¨ m·∫∑c ƒë·ªãnh s·∫Ω group to√†n b·ªô push notification c·ªßa 1 App l·∫°i l√†m m·ªôt"
     "content-available": 1, ==> S·ª≠ d·ª•ng cho silent push, gi√° tr·ªã 1 ƒë·ªÉ n√≥i v·ªõi iOS ƒë√≥ l√† silent push, s·∫Ω kh√¥ng hi·ªÉn th·ªã nh∆∞ push notification th√¥ng th∆∞·ªùng v√† ƒë√°nh th·ª©c App khi nh·∫≠n ƒë∆∞·ª£c notification.
                                 (Khi kh√¥ng c√≥ nhu c·∫ßu s·ª≠ d·ª•ng silent push, c√°ch t·ªët nh·∫•t l√† lo·∫°i b·ªè c·∫∑p key-value n√†y kh·ªèi payload, ch·ª© kh√¥ng ph·∫£i set n√≥ v·ªÅ gi√° tr·ªã 0)
                                 Do App ƒë∆∞·ª£c ƒë√°nh th·ª©c trong background n√™n c·∫ßn th√™m Background Modes ·ªü ph·∫ßn Setting Capability v√† t√≠ch ch·ªçn v√†o m·ª•c Remote notifications.
                                 Kh√¥ng qu√™n c·∫≠p nh·∫≠t apns-priority b·∫±ng 5 ·ªü HTTP headers nh∆∞ m√¥ t·∫£ ph√≠a d∆∞·ªõi, n·∫øu kh√¥ng s·∫Ω x·∫£y ra l·ªói.
     "mutable-content": 1, ==>   S·ª≠ d·ª•ng ƒë·ªÉ b√°o cho iOS bi·∫øt c·∫ßn ch·ªânh s·ª≠a payload tr∆∞·ªõc khi hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng
     "category": "file_added", ==> S·ª≠ d·ª•ng ƒë·ªÉ custom actions, n·∫øu category tr√πng v·ªõi category ƒë√£ ƒë∆∞·ª£c App ƒëƒÉng k√Ω th√¨ n√≥ s·∫Ω hi·ªán c√°c action t∆∞∆°ng ·ª©ng
   },
   "customKey1": "customValue1", ==> M·ªçi th·ª© b√™n ngo√†i aps ƒë∆∞·ª£c s·ª≠ d·ª•ng cho m·ª•c ƒë√≠ch g·ª≠i th√™m c√°c th√¥ng tin b·ªï sung (t·ª± do custom) cho ph√≠a App ƒë·ªÉ th·ª±c hi·ªán c√°c y√™u c·∫ßu t·ª´ push notification
   "customKey2": {
     "subKey21": "subValue21",
     "subKey22": "subValue22"
   }
 }
 */

/*
 HTTP headers
 apns-collapse-id: thay th·∫ø push notification c≈© c√≥ c√πng gi√° tr·ªã b·∫±ng push notification m·ªõi g·ª≠i ƒë·∫øn
 apns-push-type:
 apns-priority: gi√° tr·ªã m·∫∑c ƒë·ªãnh l√† 10, s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒëi ngay l·∫≠p t·ª©c. M·ªçi push notification c√≥ ch·ª©a content-available key ƒë·ªÅu ph·∫£i set apns-priority b·∫±ng 5, n·∫øu kh√¥ng s·∫Ω x·∫£y ra l·ªói.
 */
